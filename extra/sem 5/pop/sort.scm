(define (sort l)
	(cond((null? l))
		(else(if(not(unsort? l)) (cons (retmin l) (sort (remove (retmin l) l)))
			l))))
	      
(define (small? a b)
	(if(> a b) #t
		#f))
(define (retmin l)
	(define (mini l acc)
		(cond((null? l)acc)
			((small? acc (car l)) (mini (cdr l) (set! acc (car l))))
			(else(mini (cdr l) acc))
			))
	(mini l 1000000))
(define (remove x l)
		(cond((null? l)l)
			((eq? x (car l))(cdr l))
			(else(cons (car l) (remove x (cdr l))))
			)
		)
(define (unsort? l)
	(cond((null? l)#t)
		(else(if(eq? (car l) (retmin l)) (unsort? (cdr l))
		 #f))))
(define x '(12 3 2 23 23 45 393  453 3 204 394 3340 094 884 004 093 0 494  18 34))
(sort x)